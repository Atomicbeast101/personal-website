name: Build/Push App for Development
on:
  push:
    branches:
      - dev

env:
  DOCKER_HOST: "tcp://docker:2376/"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "/certs/client"
  RCLONE_CONFIG_CLOUD_TYPE: webdav
  RCLONE_CONFIG_CLOUD_VENDOR: nextcloud
  RCLONE_CONFIG_CLOUD_URL: ${{ vars.NEXTCLOUD_WEBDEV_URL }}
  RCLONE_CONFIG_CLOUD_USER: ${{ vars.NEXTCLOUD_USER }}
  RCLONE_CONFIG_CLOUD_PASS: ${{ secrets.NEXTCLOUD_API_TOKEN }}
  CLOUD_PATH_RESUME_FILENAME: ${{ vars.NEXTCLOUD_PATH_RESUME_FILENAME }}
  HUGO_BASEURL: ${{ vars.TEST_SITE_BASE_URL }}
  HUGO_TITLE: ${{ vars.SITE_FULL_NAME }}
  HUGO_PARAMS_AUTHOR: ${{ vars.SITE_FULL_NAME }}
  HUGO_PARAMS_DESCRIPTION: ${{ vars.SITE_DESCRIPTION }}
  HUGO_PARAMS_INFO: Network/DevOps Engineer
  HUGO_PARAMS_KEYWORDS: blog,personal,devops,systems,administrator,network,networking
  HUGO_PARAMS_AVATARURL: images/logo.jpg
  HUGO_PARAMS_COLORSCHEME: dark
  HUGO_PARAMS_RYBBIT_ENABLED: true
  HUGO_PARAMS_RYBBIT_WEBSITEID: ${{ vars.TEST_SITE_ANALYTICS_WEBSITEID }}
  HUGO_PARAMS_RYBBIT_JSLOCATION: ${{ vars.SITE_ANALYTICS_JSLOCATION }}
  HUGO_PARAMS_EMAIL: ${{ vars.SITE_EMAIL_ADDRESS }}
  HUGO_PARAMS_LINKEDIN: ${{ vars.SITE_LINKEDIN_URL }}
  HUGO_PARAMS_GITHUB: ${{ vars.SITE_GITHUB_URL }}
  IMAGE_BASE: ${{ vars.VPS_ACR_URL }}/${{ vars.VPS_ACR_USERNAME }}
  IMAGE_TAG: dev
  APP_K8S_NAME: personal-site-test
  APP_K8S_HOSTNAME: ${{ vars.TEST_K8S_HOSTNAME }}
  APP_K8S_INGRESS: local-ingress

jobs:
  release:
    name: Release
    runs-on: buildx-ubuntu-latest
    container:
      image: gitea/runner-images:ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT

      - name: Login to VPS ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.VPS_ACR_URL }}
          username: ${{ vars.VPS_ACR_USERNAME }}
          password: ${{ secrets.VPS_ACR_PASSWORD }}

      - name: Build & Push to Local ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: |
            RCLONE_CONFIG_CLOUD_TYPE=${{ env.RCLONE_CONFIG_CLOUD_TYPE }}
            RCLONE_CONFIG_CLOUD_VENDOR=${{ env.RCLONE_CONFIG_CLOUD_VENDOR }}
            RCLONE_CONFIG_CLOUD_URL=${{ env.RCLONE_CONFIG_CLOUD_URL }}
            RCLONE_CONFIG_CLOUD_USER=${{ env.RCLONE_CONFIG_CLOUD_USER }}
            RCLONE_CONFIG_CLOUD_PASS=${{ env.RCLONE_CONFIG_CLOUD_PASS }}
            CLOUD_PATH_RESUME_FILENAME=${{ env.CLOUD_PATH_RESUME_FILENAME }}
            HUGO_BASEURL=${{ env.HUGO_BASEURL }}
            HUGO_TITLE=${{ env.HUGO_TITLE }}
            HUGO_PARAMS_AUTHOR=${{ env.HUGO_PARAMS_AUTHOR }}
            HUGO_PARAMS_DESCRIPTION=${{ env.HUGO_PARAMS_DESCRIPTION }}
            HUGO_PARAMS_INFO=${{ env.HUGO_PARAMS_INFO }}
            HUGO_PARAMS_KEYWORDS=${{ env.HUGO_PARAMS_KEYWORDS }}
            HUGO_PARAMS_AVATARURL=${{ env.HUGO_PARAMS_AVATARURL }}
            HUGO_PARAMS_COLORSCHEME=${{ env.HUGO_PARAMS_COLORSCHEME }}
            HUGO_PARAMS_RYBBIT_ENABLED=${{ env.HUGO_PARAMS_RYBBIT_ENABLED }}
            HUGO_PARAMS_RYBBIT_WEBSITEID=${{ env.HUGO_PARAMS_RYBBIT_WEBSITEID }}
            HUGO_PARAMS_RYBBIT_JSLOCATION=${{ env.HUGO_PARAMS_RYBBIT_JSLOCATION }}
            HUGO_PARAMS_EMAIL=${{ env.HUGO_PARAMS_EMAIL }}
            HUGO_PARAMS_LINKEDIN=${{ env.HUGO_PARAMS_LINKEDIN }}
            HUGO_PARAMS_GITHUB=${{ env.HUGO_PARAMS_GITHUB }}
          tags: |
            ${{ env.IMAGE_BASE }}/${{ steps.meta.outputs.REPO_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT

      - name: Checkout Repo
        uses: actions/checkout@v4

      # https://spacelift.io/blog/github-actions-ansible
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Run Ansible Playbook
        env:
          ANSIBLE_SUDO_PASS: ${{ secrets.VPS_SUDO_PASS }}
          APP_IMAGE: ${{ env.IMAGE_BASE }}/${{ steps.meta.outputs.REPO_NAME }}:${{ env.IMAGE_TAG }}
        run: |
          echo "${{ secrets.VPS_PUBLIC_KEY }} > vps.pkey
          chmod 0600 vps.pkey
          ansible-playbook --inventory=.gitea/ansible/inventory --private-key=vps.pkey .gitea/ansible/playbook.yml --ssh-extra-args=-o StrictHostKeyChecking=no"
          rm -rf vps.pkey

  report:
    name: Report
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: 
      - release
      - deploy
    # uses: adam/gitea-workflows/.gitea/workflows/notify.yaml@main
    steps:
      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT

      - name: Report of Success
        if: needs.release.result == 'success' && needs.deploy.result == 'success'
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
        with:
          title: Gitea DevOps
          message: ✅ Built/Pushed & Deployed ${{ steps.meta.outputs.REPO_NAME }}:dev app!

      - name: Report of Failure
        if: needs.release.result != 'success' && needs.deploy.result != 'success'
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
        with:
          title: Gitea DevOps
          message: ❌ Unable to build/push & deploy ${{ steps.meta.outputs.REPO_NAME }}:dev app.
